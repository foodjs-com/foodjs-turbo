create extension IF NOT EXISTS postgis with schema extensions;

create table if not exists public.restaurants (
	id int generated by default as identity primary key,
	name text not null,
  delivery_areas geography(POLYGON),
	location geography(POINT) not null
);

create index restaurants_geo_index
  on public.restaurants
  using GIST (location);


insert into public.restaurants
  (name, delivery_areas, location)
values
  ('Supa Burger', ST_GeomFromText('POLYGON((0 0, 0 3, 3 3, 3 0, 0 0))', 4326), st_point(3.0, 2.0)),
  ('Supa Pizza', ST_GeomFromText('POLYGON((0 0, 0 -3, -3 -3, -3 0, 0 0))', 4326), st_point(-1.0, 2.0)),
  ('Supa Taco', ST_GeomFromText('POLYGON((0 0, 0 5, 1 5, 1 0, 0 0))', 4326), st_point(-1.0, 1.0));


create or replace function nearby_restaurants(lat float, long float)
returns table (id public.restaurants.id%TYPE, name public.restaurants.name%TYPE, lat float, long float, dist_meters float)
language sql
as $$
  select id, name, st_y(location::geometry) as lat, st_x(location::geometry) as long, st_distance(location, st_point(long, lat)::geography) as dist_meters
  from public.restaurants
  order by location <-> st_point(long, lat)::geography;
$$;


create or replace function restaurants_in_view(min_lat float, min_long float, max_lat float, max_long float)
returns table (id public.restaurants.id%TYPE, name public.restaurants.name%TYPE, lat float, long float)
language sql
as $$
	select id, name, st_y(location::geometry) as lat, st_x(location::geometry) as long
	from public.restaurants
	where location && ST_SetSRID(ST_MakeBox2D(ST_Point(min_long, min_lat), ST_Point(max_long, max_lat)), 4326)
$$;


CREATE OR REPLACE FUNCTION restaurants_delivering_to(lat FLOAT, long FLOAT)
RETURNS TABLE (
    id INT,
    name TEXT,
    location GEOGRAPHY(POINT),
    delivery_area GEOGRAPHY(POLYGON)
)
LANGUAGE SQL
AS $$
SELECT
    r.id,
    r.name,
    r.location,
    r.delivery_areas
FROM
    public.restaurants r
WHERE
    r.delivery_areas && ST_SetSRID(ST_MakePoint(long, lat), 4326)::geography;
$$;

-- SELECT * FROM restaurants_delivering_to(3, 3);